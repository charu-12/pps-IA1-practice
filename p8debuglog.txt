gcc -g p8original.c
 ./a.out
enter number of complex numbers3
enter the real value3
enter the imaginary value3
enter the real value3
enter the imaginary value3
enter the real value3
enter the imaginary value3
3.000 + 3.000i
3.000 + 3.000i
3.000 + 3.000i
3.000 + 3.000i is
9.000 + 9.000i
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) break main
Breakpoint 1 at 0xa3c: file p8original.c, line 64.
(gdb) r
Starting program: /home/runner/pps-IA1-practice-1/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p8original.c:64
64  {
(gdb) n
65  int n = get_n();
(gdb) n
enter number of complex numbers3
66  Complex c[n],res;
(gdb) n
67  input_n_complex(n,c);
(gdb) n
enter the real value3
enter the imaginary value3
enter the real value3
enter the imaginary value3
enter the real value3
enter the imaginary value3
68  res = add_n_complex(n,c);
(gdb) n
69  output(n,c,res);
(gdb) n
3.000 + 3.000i
3.000 + 3.000i
3.000 + 3.000i
3.000 + 3.000i is
9.000 + 9.000i
70  return 0;
(gdb) n
71  }(gdb) c
Continuing.
[Inferior 1 (process 1927) exited normally]
(gdb) l
66  Complex c[n],res;
67  input_n_complex(n,c);
68  res = add_n_complex(n,c);
69  output(n,c,res);
70  return 0;
71  }(gdb)